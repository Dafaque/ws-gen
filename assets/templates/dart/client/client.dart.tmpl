// Code generated by wsgen. DO NOT EDIT.
import 'package:{{get_param "module"}}/{{get_param "package"}}/api/sender.dart';
import 'package:{{get_param "module"}}/{{get_param "package"}}/api/handler.dart';
import 'package:{{get_param "module"}}/{{get_param "package"}}/model/model.dart';
import 'package:{{get_param "module"}}/{{get_param "package"}}/serialization/coder.dart';

class Client extends MessageSender {
    final MessageHandler _handler;
    Client(this._handler, super.chan, super.coder){
        attachListener();
    }
    void attachListener() {
    chan.stream.listen(onMessage);
  }
  void onMessage(dynamic msg) {
    try {
      Mapable message = coder.decode(msg);
      {{- range $model := .Models}}
      {{- $name := sconv $model.Name}}
      if (message is {{$name}}) return _handler.on{{$name}}(message, this);
      {{- end}}
    } catch (err, st) {
      //@todo provide handler
      print(err);
      print(st);
    }
  }
}
