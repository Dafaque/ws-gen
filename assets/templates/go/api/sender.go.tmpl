// Code generated by wsgen. DO NOT EDIT.
package api
import (
    "{{get_param "module"}}/{{get_param "package"}}/iface"
    "{{get_param "module"}}/{{get_param "package"}}/model"
    
    "github.com/gorilla/websocket" 
)

type MessageSender struct {
    conn *websocket.Conn
    coder iface.Coder
}

func NewMessageSender(conn *websocket.Conn, coder iface.Coder) *MessageSender {
    return &MessageSender{conn: conn, coder: coder}
}

func (c *MessageSender) send(msg interface{}) error {
    data, err := c.coder.Marshal(msg)
    if err != nil {
        return err
    }

    errWrite := c.conn.WriteMessage(websocket.BinaryMessage, data)
    if errWrite != nil {
        return errWrite
    }
    return nil
}

{{- range $model := .Models}}
{{- $name := sconv $model.Name}}
// Sends {{$name}} message
// To instance {{$name}} message use model.New{{$name}} method
func (c *MessageSender) Send{{$name}}(msg model.{{$name}}) error {
    return c.send(msg)
}
{{- end}}