// Code generated by wsgen. DO NOT EDIT.
package api
import (
    "errors"
    "context"
    "{{get_param "module"}}/{{get_param "package"}}/model"

)
type MessageHandler interface {
    {{- if .Init.Params }}
    //@todo deadcode for client
    Init(context.Context, *model.InitParams) error
    {{- end}}
    OnConnected(context.Context, *MessageSender) error
    OnDisconnected(int, string)
    Ping(string) error
    Pong(string) error
    {{- range $msg := .Messages}}
    {{- $name := sconv $msg.Name}}
    On{{$name}}(context.Context, model.{{$name}}, *MessageSender) error
    {{- end}}
}

type UnimplementedMessageHandler struct {}
{{- if .Init.Params }}
func (u UnimplementedMessageHandler) Init(context.Context, *model.InitParams) error {
    println("Init is not implemented")
    return nil
}
{{- end}}
func (u UnimplementedMessageHandler) OnConnected(context.Context, *MessageSender) error {
    println("OnConnected is not implemented")
    return nil
}
func (u UnimplementedMessageHandler) OnDisconnected(int, string) {
    println("OnDisconnected is not implemented")
}

func (u UnimplementedMessageHandler) Ping(appData string) error{
    println("Ping is not implemented")
    return nil
}
func (u UnimplementedMessageHandler) Pong(appData string) error{
    println("Pong is not implemented")
    return nil
}
{{- range $msg := .Messages}}
{{- $name := sconv $msg.Name}}
func (u UnimplementedMessageHandler) On{{$name}}(context.Context, model.{{$name}}, *MessageSender) error {
    return errors.New("On{{$name}} is not implemented")
}
{{- end}}
